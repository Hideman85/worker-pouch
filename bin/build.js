#!/usr/bin/env node

'use strict';

var browserify = require('browserify');
var UglifyJS = require("uglify-js");
var Promise = require('lie');
var fs = require('fs');
var writeFile = function(file, data, options) {
  return new Promise(function (resolve, reject) {
    fs.writeFile(file, data, options, function(err) {
      if (err == null) {
        resolve();
      } else {
        reject(err);
      }
    });
  });
};
var mkdirpFn = require('mkdirp');
var mkdirp = function(dir, opts) {
  return new Promise(function (resolve, reject) {
    mkdirpFn(dir, opts, function(err) {
      if (err == null) {
        resolve();
      } else {
        reject(err);
      }
    });
  });
};
var derequire = require('derequire');

function browserifyIt(entry) {
  return new Promise(function (resolve, reject) {
    var data = '';
    var b = browserify().plugin('bundle-collapser/plugin');

    b.add(entry);
    var bundle = b.bundle();
    bundle.on('data', function (buf) {
      data += buf;
    });
    bundle.on('end', function () {
      data = derequire(data);
      data = UglifyJS.minify(data, {
        mangle: true,
        compress: true
      }).code;
      resolve(data);
    }).on('error', reject);
  });
}
return mkdirp('./lib/workerified').then(function () {
  return browserifyIt('./lib/worker/index.js');
}).then(function (data) {
  var code = "// this code is automatically generated by bin/build.js\n" +
    "module.exports = " + JSON.stringify(data) + ';';
  return writeFile('./lib/workerified/index.js', code, 'utf-8');
}).catch(function (err) {
  console.error(err.stack);
  process.exit(1);
});